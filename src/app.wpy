<style lang="less">
view,text{ box-sizing: border-box; }
page{ background-color: #f5f5f5; color: #333;}
page::before{ content: ""; display: block; position: fixed; top: 0; left: 0; width: 100%; height: 1rpx; background-color: #eee; z-index: 999; }

.view-cell{ margin-top: 20rpx; background-color: #fff; }
.view-cell .cell{ display: flex; align-items: center; padding: 20rpx 30rpx; border-top: solid 1rpx #eee; font-size: 28rpx; }
.view-cell .cell:nth-child(1){ border-bottom: 0; }
.view-cell .cell .left{}
.view-cell .cell .right{ flex: 1; display: flex; align-items: center; margin-left: 15rpx; }
.view-cell .cell .right .text{ flex: 1; }
.view-cell .cell .right .icon-arrow{ width: 14rpx; margin-left: 20rpx; }
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

import { setStore } from 'wepy-redux'
import configStore from './store'

const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    pages: [
      'pages/brandSearch/brandDetail',
      'pages/brandSearch/zhuceStatus',
      'pages/brandSearch/index',
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black'
    }
  };

  globalData = {
    userInfo: null
  };

  constructor () {
    super()
    this.use('requestfix')
  };

  onLaunch() {
    this.testAsync()
  };

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  };

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  };

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
};
</script>
